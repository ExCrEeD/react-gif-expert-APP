{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertAPP.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertAPP","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAQ,OAAGP,GAAH,mBAAiBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAhBa,SAACP,GAAD,OAAMF,EAAcE,EAAEQ,OAAOF,a,+BCR7CG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,4DACJ,mCACTC,EAFa,iDAEmCC,UAAUR,GAF7C,oBACJ,mCADI,sBAGDS,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAErB,ECHuB,SAACA,GAExB,MAA0BR,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAU,WACFvB,EAAQL,GAAU6B,MAAK,SAAAhB,GAAI,OAAEc,EAAS,CAClCf,KAAKC,EACNY,SAAQ,SAEjB,CAACzB,IAEI0B,EDXqBI,CAAa9B,GAA7Ba,EAAZ,EAAOD,KAAUa,EAAjB,EAAiBA,QAEjB,OACI,qCACA,oBAAIJ,UAAU,wCAAd,SAAuDrB,IACtDyB,GAAS,mBAAGJ,UAAU,mCAAb,qBACV,qBAAKA,UAAU,WAAf,SACKR,EAAKC,KAAI,SAAAC,GAAG,OAAG,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETrCe,EAAe,WAGxB,MAAoCvC,mBAAS,CAAC,cAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQyC,EAAWlB,KAAI,SAAAd,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAYA,GAAtBA,Y,MChBtCiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a151895e.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e)=> setInputValue(e.target.value);\r\n    \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(category=>[inputValue,...category]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n    const apikey = '2CGUOfkAqP2y5DTK3Y6WKJGFp1NJoVdd';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${apikey}&limit=10`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gifs = data.map(gif=> {\r\n        return {\r\n            id:gif.id,\r\n            title:gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:gifs,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>    \r\n        {loading&&<p className=\"animate__animated animate__flash\">loading</p>}\r\n        <div className=\"cardGrid\">\r\n            {gifs.map(gif=> <GifGridItem key={gif.id} {...gif}/>)}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs =(category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n            getGifs(category).then(gifs=>setState({ \r\n                data:gifs,\r\n               loading:false\r\n           }));          \r\n    },[category]);\r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertAPP = () => {\r\n\r\n    //const categories = ['one punch','one piece','full metal'];\r\n    const [categories, setCategories] = useState(['one piece']);\r\n\r\n    // const handleAdd =() =>{\r\n    //     setCategories([...categories,'HunterxHunter']); \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertAPP</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid key={category} category = {category}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertAPP } from './GifExpertAPP';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertAPP/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}